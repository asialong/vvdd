version: "3.7"
services:

  nginx:
    image: nginx:${NGINX_VERSION}
    ports:
      - "${NGINX_HTTP_HOST_PORT}:80"
      - "${NGINX_HTTPS_HOST_PORT}:443"
    volumes:
      - ${SOURCE_DIR}:/var/www/html/:rw
      - ${NGINX_CONFD_DIR}:/etc/nginx/conf.d/:rw
      - ${NGINX_CONF_FILE}:/etc/nginx/nginx.conf:ro
      - ${NGINX_LOG_DIR}:/var/log/nginx/:rw
    restart: always
    networks:
      - frontend
      - backend


  php74:
    image: php:${PHP74_VERSION}-fpm
    ports:
      - "${PHP74_PORT}:9000"
    volumes:
      - ${SOURCE_DIR}:/var/www/html/:rw
      - ${PHP74_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP74_LOG_DIR}:/var/log/php/:rw
    restart: always
    depends_on:
      - mysql
      - postgres
      - redis
      - mongodb
    cap_add:
      - SYS_PTRACE
    networks:
      - frontend
      - backend

  php56:
    image: php:${PHP56_VERSION}-fpm
    ports:
      - "${PHP56_PORT}:9000"
    volumes:
      - ${SOURCE_DIR}:/var/www/html/:rw
      - ${PHP56_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP56_LOG_DIR}:/var/log/php/:rw
    restart: always
    depends_on:
      - mysql
      - postgres
      - redis
      - mongodb
    cap_add:
      - SYS_PTRACE
    networks:
      - frontend
      - backend
      
      
  mysql:
    image: mysql:${MYSQL_VERSION}
    command: --default-authentication-plugin=mysql_native_password
    hostname: ${MYSQL_HOSTNAME}
    ports:
      - "${MYSQL_HOST_PORT}:3306"
    volumes:
      - ${MYSQL_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
      - ${MYSQL_DATA_DIR}:/var/lib/mysql/:rw
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
    networks:
      - backend
      
  postgres:
    image: postgres:${POSTGRES_VERSION}
    ports:
      - "${POSTGRES_HOST_PORT}:5432"
    restart: always
    privileged: true  #解决权限
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    volumes:
      - PGDATA:/var/lib/postgresql/data:rw  #将数据映射到对应的路径
    networks:
      - backend
      
  redis:
    image: redis:${REDIS_VERSION}
    ports:
      - "${REDIS_HOST_PORT}:6379"
    volumes:
      - ${REDIS_CONF_FILE}:/etc/redis.conf:ro
    restart: always
    entrypoint: ["redis-server", "/etc/redis.conf"]
    networks:
      - backend
      
  mongodb:
    image: mongo:${MONGODB_VERSION}
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGODB_INITDB_ROOT_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGODB_INITDB_ROOT_PASSWORD}"
    volumes:
      # - ${MONGODB_DATA_DIR}:/data/db:rw  # linux下可以开启尝试
      - ${MONGODB_CONFIG}:/etc/mongod.conf.orig:ro
    ports:
      - "${MONGODB_HOST_PORT}:27017"
    networks:
      - backend
      
  rabbitmq:
    image: rabbitmq:${RABBITMQ_VERSION}
    # container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    restart: always
    ports:
      - "${RABBITMQ_HOST_PORT_S}:15672"
      - "${RABBITMQ_HOST_PORT_C}:5672"
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10" 
    networks:
      - frontend
      - backend
      
volumes:
  PGDATA:
      

      

    
  # phpmyadmin:
    # image: phpmyadmin/phpmyadmin:${PHPMYADMIN_VERSION}
    # ports:
      # - "${PHPMYADMIN_HOST_PORT}:80"
    # networks:
      # - frontend
      # - backend
    # environment:
      # - PMA_HOST=mysql
      # - PMA_PORT=3306

  # phpredisadmin:
    # image: erikdubbelboer/phpredisadmin:latest
    # ports:
      # - "${REDISMYADMIN_HOST_PORT}:80"
    # networks:
      # - frontend
      # - backend
    # environment:
      # - REDIS_1_HOST=redis
      # - REDIS_1_PORT=6379

  # adminmongo:
    # image: mrvautin/adminmongo
    # ports:
      # - "${ADMINMONGO_HOST_PORT}:1234"
    # environment:
      # - HOST=0.0.0.0
      # - DB_HOST=mongodb
      # - DB_PORT=27017
    # networks:
      # - backend
      

      
networks:
  frontend:
  backend:

  

