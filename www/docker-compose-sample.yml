version: "3.7"
services:

  nginx:
    image: openresty/openresty:${NGINX_VERSION}
    ports:
      - "${NGINX_HTTP_HOST_PORT}:80"
      - "${NGINX_HTTPS_HOST_PORT}:443"
    volumes:
      - ${SOURCE_DIR}:/var/www/html/:rw
      - ${NGINX_CONFD_DIR}:/etc/nginx/conf.d/:rw
      - ${NGINX_CONF_FILE}:/etc/nginx/nginx.conf:ro
      - ${NGINX_LOG_DIR}:/var/log/nginx/:rw
    restart: always
    networks:
      - frontend
      - backend
      
          
  django:
    build: ./django
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./django/code:/home/code
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      - mongodb
    tty: true
    

  php74:
    # image: php:${PHP74_VERSION}-fpm
    image: asialong/php74:1.3.0
    # build: ./conf/php7.4
    ports:
      - "${PHP74_PORT}:9000"
      - "2345:2345"
      - "2347:2347"
      - "2000:2000"
      - "9001:9001"
    volumes:
      - ${SOURCE_DIR}:/var/www/html/:rw
      - ${PHP74_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP74_LOG_DIR}:/var/log/php/:rw
    restart: always
    depends_on:
      # - mysql
      - postgres
      - redis
      - mongodb
    cap_add:
      - SYS_PTRACE
    networks:
      - frontend
      - backend
      
  microenv:
    image: asialong/centos_microenv:1.6
    volumes:
      - ${SOURCE_DIR}:/var/www/html/:rw
      - ${MICROENV_PHP_CONF_FILE}:/usr/local/php/etc/php.ini:ro
      - ${MICROENV_PHP_LOG_DIR}:/var/log/php/:rw
    restart: always
    stdin_open: true
    tty: true
    privileged: true
    command: /bin/bash
    ports:
      - "8801:8801"
      - "8802:8802"
      - "8803:8803"
      - "8804:8804"
      - "8805:8805"
      - "8806:8806"
      - "8807:8807"
      - "8808:8808"
      - "8809:8809"
      - "9901:9901"
      - "9902:9902"
      - "9903:9903"
      - "9904:9904"
      - "9905:9905"
      - "9906:9906"
      - "9907:9907"
      - "9908:9908"
      - "9909:9909"
      - "9501:9501"
      - "8500:8500"
      - "8300:8300"
      - "8301:8301"
      - "8302:8302"
      - "8600:8600"
      - "8848:8848"
      - "8080:8080"    
    networks:
      - frontend
      - backend
      
  zipkin:
    image: openzipkin/zipkin:latest
    restart: always
    ports:
      - "9411:9411"
    networks:
      - frontend
      - backend
    
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ${PROMETHEUS_FILE}:/etc/prometheus/prometheus.yml
      - ${PROMETHEUS_DATA}:/prometheus
    ports:
      - "9090:9090"
    networks:
      - frontend
      - backend
      
  grafana:
    image: grafana/grafana:latest
    restart: always
    volumes:
      - ${GRAFANA_DATA}:/var/lib/grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "admin"
    ports:
      - "3000:3000"
    networks:
      - frontend
      - backend
  
#hyperf:
#  image: asialong/ubuntu_microenv:1.3
#    ports:
#      - "${HYPERF_PORT}:9000"
#      - "8801:8801"
#      - "8802:8802"
#      - "8803:8803"
#      - "8804:8804"
#      - "8805:8805"
#      - "8806:8806"
#      - "8807:8807"
#      - "8808:8808"
#      - "8809:8809"
#      - "9901:9901"
#      - "9902:9902"
#      - "9903:9903"
#      - "9904:9904"
#      - "9905:9905"
#      - "9906:9906"
#      - "9907:9907"
#      - "9908:9908"
#      - "9909:9909"
#      - "9501:9501"
#      - "8500:8500"
#      - "8300:8300"
#      - "8301:8301"
#      - "8302:8302"
#      - "8600:8600"
#      - "8848:8848"
#      - "8080:8080"    
#    volumes:
#      - ${SOURCE_DIR}:/var/www/html/:rw
#      - ${PHP74_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
#      - ${PHP74_LOG_DIR}:/var/log/php/:rw
#    restart: always
#    depends_on:
#      # - mysql
#      - postgres
#      - redis
#      - mongodb
#    cap_add:
#      - SYS_PTRACE
#    networks:
#      - frontend
#      - backend  

  php73:
    # image: php:${PHP73_VERSION}-fpm
    #build: ./conf/php7.3
    image: asialong/php73:1.0.0
    ports:
      - "${PHP73_PORT}:9000"
      - "8324:8324"
    volumes:
      - ${SOURCE_DIR}:/var/www/html/:rw
      - ${PHP73_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP73_LOG_DIR}:/var/log/php/:rw
    restart: always
    depends_on:
      # - mysql
      - postgres
      - redis
      - mongodb
    cap_add:
      - SYS_PTRACE
    networks:
      - frontend
      - backend
           
  # php72:
    # image: php:${PHP72_VERSION}-fpm
    # ports:
      # - "${PHP72_PORT}:9000"
    # volumes:
      # - ${SOURCE_DIR}:/var/www/html/:rw
      # - ${PHP72_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      # - ${PHP72_LOG_DIR}:/var/log/php/:rw
    # restart: always
    # depends_on:
      # - mysql
      # - postgres
      # - redis
      # - mongodb
    # cap_add:
      # - SYS_PTRACE
    # networks:
      # - frontend
      # - backend
      
  # php71:
    # image: php:${PHP71_VERSION}-fpm
    # ports:
      # - "${PHP71_PORT}:9000"
    # volumes:
      # - ${SOURCE_DIR}:/var/www/html/:rw
      # - ${PHP71_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      # - ${PHP71_LOG_DIR}:/var/log/php/:rw
    # restart: always
    # depends_on:
      # - mysql
      # - postgres
      # - redis
      # - mongodb
    # cap_add:
      # - SYS_PTRACE
    # networks:
      # - frontend
      # - backend

  php56:
    # image: php:${PHP56_VERSION}-fpm
    image: www_php56
    # build: ./conf/php5.6
    ports:
      - "${PHP56_PORT}:9000"
    volumes:
      - ${SOURCE_DIR}:/var/www/html/:rw
      - ${PHP56_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP56_LOG_DIR}:/var/log/php/:rw
    restart: always
    depends_on:
      # - mysql
      - postgres
      - redis
      - mongodb
    cap_add:
      - SYS_PTRACE
    extra_hosts:
      - "xx.xxx.com:192.168.144.1"  #解决跨域
    networks:
      - frontend
      - backend
      
      
  # mysql:
    # image: mysql:${MYSQL_VERSION}
    # command:
      # --character-set-server=utf8mb4
      # --collation-server=utf8mb4_general_ci
      # --explicit_defaults_for_timestamp=true
      # --default-authentication-plugin=mysql_native_password
      # --sql-mode="STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,ERROR_FOR_DIVISION_BY_ZERO"
      # --max_allowed_packet=1024*1024*1024
      # --net_buffer_length=1024*1024*1024
    # privileged: true
    # ports:
      # - "${MYSQL_HOST_PORT}:3306"
    # volumes:
      # - ${MYSQL_CONF_FILE}:/etc/mysql/mysql.cnf
      # - ${MYSQL_DATA_DIR}:/var/lib/mysql/:rw
    # restart: always
    # environment:
      # MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
    # networks:
      # - backend
      
  elasticsearch:
    image: elasticsearch:${ELASTICSEARCH_VERSION}
    networks:
      - frontend
      - backend
    volumes:
      - ${ELASTICSEARCH_DATA_DIR}:/usr/share/elasticsearch/data:rw  #这里将elasticsearch的数据文件映射本地，以保证下次如果删除了容器还有数据
    environment:
      - discovery.type=single-node
    ports:
      - "${ELASTICSEARCH_HOST_PORT_C}:${ELASTICSEARCH_HOST_PORT_S}"
 
  elastichd:
    image: containerize/elastichd:latest
    networks:
      - frontend
      - backend
    ports:
      - "9800:9800"
    depends_on:
      - elasticsearch
    links:
      - "elasticsearch:demo"
      
  postgres:
    image: postgres:${POSTGRES_VERSION}
    ports:
      - "${POSTGRES_HOST_PORT}:5432"
    restart: always
    privileged: true  #解决权限
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    volumes:
      - PGDATA:/var/lib/postgresql/data:rw  #将数据映射到对应的路径
    networks:
      - backend
      
  redis:
    image: redis:${REDIS_VERSION}
    ports:
      - "${REDIS_HOST_PORT}:6379"
    volumes:
      - ${REDIS_CONF_FILE}:/etc/redis.conf:ro
    restart: always
    entrypoint: ["redis-server", "/etc/redis.conf"]
    networks:
      - backend
      
  mongodb:
    image: mongo:${MONGODB_VERSION}
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGODB_INITDB_ROOT_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGODB_INITDB_ROOT_PASSWORD}"
    volumes:
      # - ${MONGODB_DATA_DIR}:/data/db:rw  # linux下可以开启尝试
      - ${MONGODB_CONFIG}:/etc/mongod.conf.orig:ro
    ports:
      - "${MONGODB_HOST_PORT}:27017"
    networks:
      - backend
      
  rabbitmq:
    image: rabbitmq:${RABBITMQ_VERSION}
    # container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    restart: always
    ports:
      - "${RABBITMQ_HOST_PORT_S}:15672"
      - "${RABBITMQ_HOST_PORT_C}:5672"
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10" 
    networks:
      - frontend
      - backend
      
volumes:
  PGDATA:
      

      

    
  # phpmyadmin:
    # image: phpmyadmin/phpmyadmin:${PHPMYADMIN_VERSION}
    # ports:
      # - "${PHPMYADMIN_HOST_PORT}:80"
    # networks:
      # - frontend
      # - backend
    # environment:
      # - PMA_HOST=mysql
      # - PMA_PORT=3306

  # phpredisadmin:
    # image: erikdubbelboer/phpredisadmin:latest
    # ports:
      # - "${REDISMYADMIN_HOST_PORT}:80"
    # networks:
      # - frontend
      # - backend
    # environment:
      # - REDIS_1_HOST=redis
      # - REDIS_1_PORT=6379

  # adminmongo:
    # image: mrvautin/adminmongo
    # ports:
      # - "${ADMINMONGO_HOST_PORT}:1234"
    # environment:
      # - HOST=0.0.0.0
      # - DB_HOST=mongodb
      # - DB_PORT=27017
    # networks:
      # - backend
      
  
      
networks:
  frontend:
  backend:

  

